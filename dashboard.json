{
  "__inputs": [
    {
      "name": "DS_INFLUXDB-FLUX",
      "label": "InfluxDB-Flux",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "barchart",
      "name": "Bar chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.1.1"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Ofgem price for customers on a standard variable tariff (default tariff)",
      "tooltip": "Ofgem price for customers on a standard variable tariff (default tariff)",
      "type": "link",
      "url": "https://www.ofgem.gov.uk/information-consumers/energy-advice-households/energy-price-cap"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 21,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "Any prices are calculated using the most recent price per kWh and standing charges from Ofgem using the default standard variable tariff. This price changes every quarter and so any longer term prices will use the latest values, meaning the actual cost may have been higher or lower.",
        "mode": "markdown"
      },
      "pluginVersion": "10.1.1",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 4000000
              },
              {
                "color": "orange",
                "value": 5000000
              },
              {
                "color": "red",
                "value": 6000000
              }
            ]
          },
          "unit": "mwatt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 0,
        "y": 2
      },
      "id": 5,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 50
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"current_power\")\r\n  |> last()\r\n  |> group(columns: [\"host\"])\r\n  |> sum()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Current draw (total)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 7000
              },
              {
                "color": "orange",
                "value": 8000
              },
              {
                "color": "red",
                "value": 9000
              }
            ]
          },
          "unit": "watth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 3,
        "y": 2
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 50
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"today_energy\")\r\n  |> last()\r\n  |> group(columns: [\"host\"])\r\n  |> sum()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Usage (today so far)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Including standard variable tariff standing charge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 3
              },
              {
                "color": "orange",
                "value": 4
              },
              {
                "color": "red",
                "value": 5
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Total"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 6,
        "y": 2
      },
      "id": 11,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {
          "valueSize": 50
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"today_energy\")\r\n  |> last()\r\n  |> group(columns: [\"host\"])\r\n  |> sum()\r\n  |> map(fn: (r) => ({r with\r\n    _value: float(v: r._value / 1000) * ${price_per_kwh} + ${standing_charge}\r\n  }))",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Cost estimate (today so far)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 70000
              },
              {
                "color": "orange",
                "value": 80000
              },
              {
                "color": "red",
                "value": 90000
              }
            ]
          },
          "unit": "watth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Total"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 9,
        "y": 2
      },
      "id": 3,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 50
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"month_energy\")\r\n  |> last()\r\n  |> group(columns: [\"host\"])\r\n  |> sum()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Usage (this month so far)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Including standard variable tariff standing charge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 65
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 75
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Total"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 12,
        "y": 2
      },
      "id": 10,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {
          "valueSize": 50
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"date\"\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"month_energy\")\r\n  |> last()\r\n  |> group(columns: [\"host\"])\r\n  |> sum()\r\n  |> map(fn: (r) => ({r with\r\n    _value: float(v: r._value / 1000) * ${price_per_kwh} + float(v: date.monthDay(t: now())) * ${standing_charge}\r\n  }))",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Cost estimate (this month so far)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 70000
              },
              {
                "color": "orange",
                "value": 80000
              },
              {
                "color": "red",
                "value": 90000
              }
            ]
          },
          "unit": "watth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Total"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 15,
        "y": 2
      },
      "id": 22,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 50
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"date\"\r\nimport \"math\"\r\n\r\ncur_date = now()\r\ncur_year = date.year(t: cur_date)\r\ncur_month = date.month(t: cur_date)\r\ncur_day = date.monthDay(t: cur_date)\r\nleap_year = if math.remainder(x: float(v: cur_year), y: 400.0) == 0.0 then\r\n  1\r\nelse if math.remainder(x: float(v: cur_year), y: 4.0) == 0.0 and math.remainder(x: float(v: cur_year), y: 100.0) != 0.0 then\r\n  1\r\nelse\r\n  0\r\ndays_in_month = if contains(value: cur_month, set: [4, 6, 9, 11]) then\r\n  30\r\nelse if contains(value: cur_month, set: [2,]) and leap_year == 0 then\r\n  28\r\nelse if contains(value: cur_month, set: [2,]) and leap_year == 1 then\r\n  29\r\nelse\r\n  31\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"month_energy\")\r\n  |> last()\r\n  |> group(columns: [\"host\"])\r\n  |> sum()\r\n  |> map(fn: (r) => ({r with\r\n    cur_year: cur_year,\r\n    leap_year: leap_year,\r\n    _value: float(v: (r._value / cur_day * days_in_month))\r\n  }))\r\n  |> keep(columns: [\"_value\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Usage prediction (this month)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Including standard variable tariff standing charge, it takes the current kWh value, divides by the number of day in the month so far, then multiplies it by number of days in the month, calculating in price per kWh and standing charge.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 65
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 75
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Total"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 18,
        "y": 2
      },
      "id": 18,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {
          "valueSize": 50
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"date\"\r\nimport \"math\"\r\n\r\ncur_date = now()\r\ncur_year = date.year(t: cur_date)\r\ncur_month = date.month(t: cur_date)\r\ncur_day = date.monthDay(t: cur_date)\r\nleap_year = if math.remainder(x: float(v: cur_year), y: 400.0) == 0.0 then\r\n  1\r\nelse if math.remainder(x: float(v: cur_year), y: 4.0) == 0.0 and math.remainder(x: float(v: cur_year), y: 100.0) != 0.0 then\r\n  1\r\nelse\r\n  0\r\ndays_in_month = if contains(value: cur_month, set: [4, 6, 9, 11]) then\r\n  30\r\nelse if contains(value: cur_month, set: [2,]) and leap_year == 0 then\r\n  28\r\nelse if contains(value: cur_month, set: [2,]) and leap_year == 1 then\r\n  29\r\nelse\r\n  31\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"month_energy\")\r\n  |> last()\r\n  |> group(columns: [\"host\"])\r\n  |> sum()\r\n  |> map(fn: (r) => ({r with\r\n    cur_year: cur_year,\r\n    leap_year: leap_year,\r\n    _value: (\r\n      float(v: ((r._value / 1000) / cur_day) * days_in_month) * ${price_per_kwh}\r\n    ) + (\r\n      float(v: days_in_month) * ${standing_charge}\r\n    )\r\n  }))\r\n  |> keep(columns: [\"_value\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Cost prediction (this month)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Excluding standard variable tariff standing charge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 6
      },
      "id": 12,
      "options": {
        "displayMode": "lcd",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"today_energy\")\r\n  |> last()\r\n  |> map(fn: (r) => ({r with\r\n    _value: (float(v: r._value) / 1000.0) * ${price_per_kwh}\r\n  }))\r\n  |> map(fn: (r) => ({r with\r\n    _field: if r.name == \"pc\" then\r\n      \"PC\"\r\n    else if r.name == \"rack\" then\r\n      \"Rack\"\r\n    else if r.name == \"tv\" then\r\n      \"TV\"\r\n    else if r.name == \"kettle\" then\r\n      \"Kettle\"\r\n    else if r.name == \"fridge\" then\r\n      \"Fridge/Freezer\"\r\n    else if r.name == \"microwave\" then\r\n      \"Microwave\"\r\n    else if r.name == \"washing_machine\" then\r\n      \"Washing Machine\"\r\n    else if r.name == \"fan\" then\r\n      \"Fan\"\r\n    else if r.name == \"qi_charger\" then\r\n      \"Qi Charger\"\r\n    else if r.name == \"water_fountain\" then\r\n      \"Cat Water Fountain\"\r\n    else if r.name == \"alexa\" then\r\n      \"Alexa\"\r\n    else\r\n      r.name,\r\n  }))\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])\r\n  |> sort()",
          "refId": "A"
        }
      ],
      "title": "Cost estimate for today so far (by device)",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Excluding standard variable tariff standing charge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 6,
        "y": 6
      },
      "id": 13,
      "options": {
        "displayMode": "lcd",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"month_energy\")\r\n  |> last()\r\n  |> map(fn: (r) => ({r with\r\n    _value: (float(v: r._value) / 1000.0) * ${price_per_kwh}\r\n  }))\r\n  |> map(fn: (r) => ({r with\r\n    _field: if r.name == \"pc\" then\r\n      \"PC\"\r\n    else if r.name == \"rack\" then\r\n      \"Rack\"\r\n    else if r.name == \"tv\" then\r\n      \"TV\"\r\n    else if r.name == \"kettle\" then\r\n      \"Kettle\"\r\n    else if r.name == \"fridge\" then\r\n      \"Fridge/Freezer\"\r\n    else if r.name == \"microwave\" then\r\n      \"Microwave\"\r\n    else if r.name == \"washing_machine\" then\r\n      \"Washing Machine\"\r\n    else if r.name == \"fan\" then\r\n      \"Fan\"\r\n    else if r.name == \"qi_charger\" then\r\n      \"Qi Charger\"\r\n    else if r.name == \"water_fountain\" then\r\n      \"Cat Water Fountain\"\r\n    else if r.name == \"alexa\" then\r\n      \"Alexa\"\r\n    else\r\n      r.name,\r\n  }))\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])\r\n  |> sort()",
          "refId": "A"
        }
      ],
      "title": "Cost estimate for this month so far (by device)",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Excluding standard variable tariff standing charge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 12,
        "y": 6
      },
      "id": 16,
      "options": {
        "displayMode": "lcd",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"today_energy\")\r\n  |> last()\r\n  |> map(fn: (r) => ({r with\r\n    _value: (float(v: r._value) / 1000.0) * ${price_per_kwh}\r\n  }))\r\n  |> map(fn: (r) =>  ({r with\r\n    _field: if r.room == \"kitchen\" then\r\n      \"Kitchen\"\r\n    else if r.room == \"office\" then\r\n      \"Office\"\r\n    else if r.room == \"living_room\" then\r\n      \"Living Room\"\r\n    else if r.room == \"bedroom\" then\r\n      \"Bedroom\"\r\n    else if r.room == \"hallway\" then\r\n      \"Hallway\"\r\n    else\r\n      r.room,\r\n  }))\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])\r\n  |> sort()",
          "refId": "A"
        }
      ],
      "title": "Cost estimate for today so far (by room)",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Excluding standard variable tariff standing charge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 18,
        "y": 6
      },
      "id": 17,
      "options": {
        "displayMode": "lcd",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -10m)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"month_energy\")\r\n  |> last()\r\n  |> map(fn: (r) => ({r with\r\n    _value: (float(v: r._value) / 1000.0) * ${price_per_kwh}\r\n  }))\r\n  |> map(fn: (r) =>  ({r with\r\n    _field: if r.room == \"kitchen\" then\r\n      \"Kitchen\"\r\n    else if r.room == \"office\" then\r\n      \"Office\"\r\n    else if r.room == \"living_room\" then\r\n      \"Living Room\"\r\n    else if r.room == \"bedroom\" then\r\n      \"Bedroom\"\r\n    else if r.room == \"hallway\" then\r\n      \"Hallway\"\r\n    else\r\n      r.room,\r\n  }))\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])\r\n  |> sort()",
          "refId": "A"
        }
      ],
      "title": "Cost estimate for this month so far (by rooom)",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": 15000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 4000000
              },
              {
                "color": "orange",
                "value": 5000000
              },
              {
                "color": "red",
                "value": 6000000
              }
            ]
          },
          "unit": "mwatt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Total"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 13
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "timezone": [
          "utc"
        ],
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"current_power\")\r\n  |> filter(fn: (r) => if \"${exclude_kettle}\" == \"true\" then r.name != \"kettle\" else r._field == \"current_power\")\r\n  |> group(columns: [\"_time\"], mode:\"by\")\r\n  |> sum(column: \"_value\")\r\n  |> group()\r\n  |> fill(value: 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\r\n  |> keep(columns: [\"_time\", \"_value\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Current draw (total)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "left",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 70000
              },
              {
                "color": "orange",
                "value": 80000
              },
              {
                "color": "red",
                "value": 90000
              }
            ]
          },
          "unit": "watth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 12,
        "y": 13
      },
      "id": 14,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "colorByField": "_value",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "text": {
          "valueSize": 16
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        },
        "xField": "_time",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "import \"strings\"\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -1y)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_monthly_total\" and r._field == \"total_sum\")\r\n  |> group(columns: [\"host\"])\r\n  |> aggregateWindow(every: 1mo, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with\r\n    _time: strings.substring(end: 7, start: 0, v: string(v: r._time))\r\n  }))\r\n  |> keep(columns: [\"_time\", \"_value\"])",
          "refId": "A"
        }
      ],
      "title": "Usage (year)",
      "transparent": true,
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "description": "Estimated. Using the current price per kWh and standing charges, so months outside of the current price cap which is set per quarter may have been higher or lower",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "left",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 65
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 75
              }
            ]
          },
          "unit": "currencyGBP"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 18,
        "y": 13
      },
      "id": 20,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "colorByField": "_value",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "text": {
          "valueSize": 16
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        },
        "xField": "_time",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "import \"date\"\r\nimport \"math\"\r\nimport \"strings\"\r\n\r\ncur_date = now()\r\ncur_year = date.year(t: cur_date)\r\ncur_month = date.month(t: cur_date)\r\ncur_day = date.monthDay(t: cur_date)\r\nleap_year = if math.remainder(x: float(v: cur_year), y: 400.0) == 0.0 then\r\n  1\r\nelse if math.remainder(x: float(v: cur_year), y: 4.0) == 0.0 and math.remainder(x: float(v: cur_year), y: 100.0) != 0.0 then\r\n  1\r\nelse\r\n  0\r\ndays_in_month = if contains(value: cur_month, set: [4, 6, 9, 11]) then\r\n  30\r\nelse if contains(value: cur_month, set: [2,]) and leap_year == 0 then\r\n  28\r\nelse if contains(value: cur_month, set: [2,]) and leap_year == 1 then\r\n  29\r\nelse\r\n  31\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -1y)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_monthly_total\" and r._field == \"total_sum\")\r\n  |> group(columns: [\"host\"])\r\n  |> aggregateWindow(every: 1mo, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with\r\n    _time: strings.substring(end: 7, start: 0, v: string(v: r._time)),\r\n    _value: (\r\n      float(v: ((r._value / 1000) / cur_day) * days_in_month) * ${price_per_kwh}\r\n    ) + (\r\n      float(v: days_in_month) * ${standing_charge}\r\n    )\r\n  }))\r\n  |> keep(columns: [\"_time\", \"_value\"])",
          "refId": "A"
        }
      ],
      "title": "Cost (year)",
      "transparent": true,
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": 15000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 3000000
              },
              {
                "color": "orange",
                "value": 3500000
              },
              {
                "color": "red",
                "value": 4000000
              }
            ]
          },
          "unit": "mwatt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 22
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          "utc"
        ],
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"current_power\")\r\n  |> filter(fn: (r) => if \"${exclude_kettle}\" == \"true\" then r.name != \"kettle\" else r._field == \"current_power\")\r\n  |> fill(value: 0)\r\n  |> map(fn: (r) => ({r with\r\n    _field: if r.name == \"pc\" then\r\n      \"PC\"\r\n    else if r.name == \"rack\" then\r\n      \"Rack\"\r\n    else if r.name == \"tv\" then\r\n      \"TV\"\r\n    else if r.name == \"kettle\" then\r\n      \"Kettle\"\r\n    else if r.name == \"fridge\" then\r\n      \"Fridge/Freezer\"\r\n    else if r.name == \"microwave\" then\r\n      \"Microwave\"\r\n    else if r.name == \"washing_machine\" then\r\n      \"Washing Machine\"\r\n    else if r.name == \"fan\" then\r\n      \"Fan\"\r\n    else if r.name == \"qi_charger\" then\r\n      \"Qi Charger\"\r\n    else if r.name == \"water_fountain\" then\r\n      \"Cat Water Fountain\"\r\n    else if r.name == \"alexa\" then\r\n      \"Alexa\"\r\n    else\r\n      r.name,\r\n  }))\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Current draw (by device)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": 15000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "mwatt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 22
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          "utc"
        ],
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tapo_p110_power_consumption_w",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"math\"\r\n\r\ntelegraf_send_freq = 10\r\ninterval_seconds = int(v: math.mMax(x: float(v: $__interval_ms) / 1000.0, y: float(v: telegraf_send_freq)))\r\nwindow_period = duration(v: string(v: interval_seconds) + \"s\")\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_consumption\" and r._field == \"current_power\")\r\n  |> filter(fn: (r) => if \"${exclude_kettle}\" == \"true\" then r.name != \"kettle\" else r._field == \"current_power\")\r\n  |> fill(value: 0)\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\", \"room\"])\r\n  |> group(columns: [\"room\"])\r\n  |> aggregateWindow(every: window_period, fn: sum)\r\n  |> map(fn: (r) =>  ({r with\r\n    room: if r.room == \"kitchen\" then\r\n      \"Kitchen\"\r\n    else if r.room == \"office\" then\r\n      \"Office\"\r\n    else if r.room == \"living_room\" then\r\n      \"Living Room\"\r\n    else if r.room == \"bedroom\" then\r\n      \"Bedroom\"\r\n    else if r.room == \"hallway\" then\r\n      \"Hallway\"\r\n    else\r\n      r.room,\r\n    _value: r._value / (interval_seconds / telegraf_send_freq),\r\n  }))",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "gauge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "room::tag",
              "operator": "=",
              "value": "kettle"
            }
          ]
        }
      ],
      "title": "Current draw (by room)",
      "transparent": true,
      "type": "timeseries"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_price\" and r._field == \"price_per_kwh\")\r\n  |> last()\r\n  |> keep(columns: [\"_value\"])",
        "description": "Ofgem energy price cap per kWh on a standard variable tariff",
        "hide": 0,
        "includeAll": false,
        "label": "Price per kWh (£)",
        "multi": false,
        "name": "price_per_kwh",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_price\" and r._field == \"price_per_kwh\")\r\n  |> last()\r\n  |> keep(columns: [\"_value\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_price\" and r._field == \"standing_charge\")\r\n  |> last()\r\n  |> keep(columns: [\"_value\"])",
        "description": "Ofgem energy price cap daily standing charge on a standard variable tariff",
        "hide": 0,
        "includeAll": false,
        "label": "Standing charge (£)",
        "multi": false,
        "name": "standing_charge",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_price\" and r._field == \"standing_charge\")\r\n  |> last()\r\n  |> keep(columns: [\"_value\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "import \"strings\"\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_price\" and r._field == \"standing_charge\")\r\n  |> last()\r\n  |> map(fn: (r) => ({r with _value: strings.substring(end: 10, start: 0, v: string(v: r._time))}))\r\n  |> keep(columns: [\"_value\"])",
        "description": "Last date the price per kilowatt-hour and standing charge on a standard variable tariff were updated.",
        "hide": 0,
        "includeAll": false,
        "label": "Last updated",
        "multi": false,
        "name": "last_updated",
        "options": [],
        "query": "import \"strings\"\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r._measurement == \"p110_energy_price\" and r._field == \"standing_charge\")\r\n  |> last()\r\n  |> map(fn: (r) => ({r with _value: strings.substring(end: 10, start: 0, v: string(v: r._time))}))\r\n  |> keep(columns: [\"_value\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "true",
          "value": "true"
        },
        "description": "If true, exclude kettle from time series graphs to mask it's spikiness",
        "hide": 0,
        "includeAll": false,
        "label": "Exclude kettle spikes",
        "multi": false,
        "name": "exclude_kettle",
        "options": [
          {
            "selected": false,
            "text": "false",
            "value": "false"
          },
          {
            "selected": true,
            "text": "true",
            "value": "true"
          }
        ],
        "query": "false, true",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Energy consumption",
  "uid": "f81adb27-55af-485a-b3b6-58ad19519d28",
  "version": 105,
  "weekStart": ""
}

